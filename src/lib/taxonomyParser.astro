---
import { getSinglePage } from "@/lib/contentParser.astro";
import { slugify, humanize } from "@/lib/utils/textConverter";

// get taxonomy from frontmatter
export const getTaxonomy = async (collection: any, name: string) => {
  const singlePages = await getSinglePage(collection);
  const taxonomyPages = singlePages.map((page: any) => page.data[name]);
  let taxonomies: string[] = [];
  for (let i = 0; i < taxonomyPages.length; i++) {
    const categoryArray = taxonomyPages[i];
    for (let j = 0; j < categoryArray.length; j++) {
      taxonomies.push(slugify(categoryArray[j])!);
    }
  }
  const taxonomy = [...new Set(taxonomies)];
  return taxonomy;
};

// get all taxonomies from frontmatter
export const getAllTaxonomy = async (collection: any, name: string) => {
  const singlePages = await getSinglePage(collection);
  const taxonomyPages = singlePages.map((page: any) => page.data[name]);
  let taxonomies: string[] = [];
  for (let i = 0; i < taxonomyPages.length; i++) {
    const categoryArray = taxonomyPages[i];
    for (let j = 0; j < categoryArray.length; j++) {
      taxonomies.push(slugify(categoryArray[j])!);
    }
  }
  return taxonomies;
};

// 🆕 get taxonomy with post counts
export const getTaxonomyWithCounts = async (collection: any, name: string) => {
  const singlePages = await getSinglePage(collection);
  const taxonomyCount: {
    [key: string]: { name: string; slug: string; count: number };
  } = {};

  // 모든 포스트를 돌면서 카테고리별 개수 계산
  singlePages.forEach((page: any) => {
    const categories = page.data[name] || [];
    categories.forEach((category: string) => {
      const categorySlug = slugify(category)!;

      if (taxonomyCount[categorySlug]) {
        taxonomyCount[categorySlug].count += 1;
      } else {
        taxonomyCount[categorySlug] = {
          name: humanize(category),
          slug: categorySlug,
          count: 1,
        };
      }
    });
  });

  // 객체를 배열로 변환하고 이름순으로 정렬
  return Object.values(taxonomyCount).sort((a, b) =>
    a.name.localeCompare(b.name),
  );
};

// 🆕 get specific taxonomy count
export const getTaxonomyCount = async (
  collection: any,
  name: string,
  taxonomySlug: string,
) => {
  const singlePages = await getSinglePage(collection);

  return singlePages.filter((page: any) => {
    const categories = page.data[name] || [];
    return categories.some(
      (category: string) => slugify(category) === taxonomySlug,
    );
  }).length;
};
---
