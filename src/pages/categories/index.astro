---
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { getTaxonomy } from "@/lib/taxonomyParser.astro";
import { slugify, humanize } from "@/lib/utils/textConverter";
import { sortByDate } from "@/lib/utils/sortFunctions";
import { BiCategoryAlt } from "react-icons/bi";

// 모든 포스트 가져오기
const posts = await getSinglePage("posts");
const sortedPosts = sortByDate(posts);

// 카테고리별로 포스트 그룹화 및 최신 포스트 포함
const categories = await getTaxonomy("posts", "categories");
const categoriesWithPosts = categories
  .map((category: string) => {
    const categoryPosts = sortedPosts.filter((post: any) =>
      post.data.categories.some((cat: string) => slugify(cat) === category),
    );

    return {
      name: humanize(category),
      slug: category,
      count: categoryPosts.length,
      recentPosts: categoryPosts.slice(0, 2), // 최신 2개 포스트
    };
  })
  .filter((cat: any) => cat.count > 0);

const totalPosts = categoriesWithPosts.reduce((sum, cat) => sum + cat.count, 0);
---

<Base title={"Categories"}>
  <section class="section">
    <div class="container">
      <div class="text-center mb-12">
        <h1 class="h2 page-heading mb-8">Categories</h1>
        <p class="text-text max-w-2xl mx-auto">
          총 {categoriesWithPosts.length}개 카테고리, {totalPosts}개 포스트
        </p>
      </div>

      <div
        class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 justify-items-center"
      >
        {
          categoriesWithPosts.map((category) => (
            <div class="w-full max-w-sm p-4 rounded-xl border border-border hover:border-primary transition-all duration-300 hover:shadow-lg group bg-light/50">
              {/* 카테고리 헤더 - 클릭 시 카테고리 페이지로 */}
              <a href={`/categories/${category.slug}`} class="block">
                <div class="flex items-center justify-between mb-4 group-hover:scale-105 transition-transform">
                  <div class="flex items-center flex-1">
                    <div class="w-12 h-12 rounded-lg bg-primary/10 flex items-center justify-center mr-4 group-hover:bg-primary/20 transition-colors">
                      <BiCategoryAlt className="text-xl text-primary" />
                    </div>
                    <h3 class="font-semibold text-dark group-hover:text-primary transition-colors text-lg">
                      {category.name}
                    </h3>
                  </div>
                  <span class="bg-primary text-white px-3 py-1 rounded-full text-sm font-bold">
                    {category.count}
                  </span>
                </div>
              </a>

              {/* 최신 포스트 미리보기 - 개별 포스트 링크 */}
              <div class="space-y-2">
                {category.recentPosts.map((post, index) => (
                  <a
                    href={`/${post.id.replace(/^\d{4}-\d{2}-\d{2}-/, "").replace(/\.(md|mdx)$/, "")}`}
                    class="block text-sm text-text hover:text-primary transition-colors py-1 px-2 hover:bg-primary/5 rounded"
                    title={post.data.title}
                  >
                    <span class="line-clamp-1">{post.data.title}</span>
                  </a>
                ))}

                {/* 더 많은 포스트가 있을 때 - 카테고리 페이지로 */}
                {category.count > 2 && (
                  <a
                    href={`/categories/${category.slug}`}
                    class="block text-xs text-primary/70 hover:text-primary transition-colors py-1 px-2 hover:bg-primary/5 rounded"
                  >
                    +{category.count - 2}개 더 보기 →
                  </a>
                )}
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>
</Base>

<style>
  .line-clamp-1 {
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
