---
// import Share from "@/components/Share.astro";
import SimilarPosts from "@/components/SimilarPosts.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import dateFormat from "@/lib/utils/dateFormat";
import similerItems from "@/lib/utils/similarItems";
import { humanize, markdownify, slugify } from "@/lib/utils/textConverter";
import { Image } from "astro:assets";
import { render } from "astro:content";
import { BiCalendarEdit, BiCategoryAlt } from "react-icons/bi";
import { extractHeadings } from "@/lib/utils/tocFunctions";
import TableOfContents from "@/layouts/components/TableOfContents";
import config from "@/config/config.json";

const posts = await getSinglePage("posts");
const { post } = Astro.props;
const similarPosts = similerItems(post, posts, post.slug);
const { Content } = await render(post);
const { title, description, categories, image, date, tags } = post.data;

// TOCÎ•º ÏúÑÌïú Ìó§Îî© Ï∂îÏ∂ú (tocFunctions.ts ÌôúÏö©)
const { enable_toc } = config.params;
let headings: any[] = [];

if (enable_toc) {
  // tocFunctions.tsÏùò extractHeadings Ìï®Ïàò ÏÇ¨Ïö©
  headings = extractHeadings(post.body);
}
---

<section class="section">
  <div class="container">
    <article class="row justify-center">
      <div class="md:col-10 text-center">
        <h1 set:html={markdownify(title)} class="h2" />
        <ul class="mt-4 flex flex-wrap items-center justify-center text-text">
          <li class="mx-3 flex items-center flex-wrap font-medium">
            <BiCalendarEdit className="mr-1 h-5 w-5 text-gray-600" />
            {dateFormat(date)}
          </li>
          <li class="mx-3 flex items-center flex-wrap">
            <BiCategoryAlt className="mr-1 h-[18px] w-[18px] text-gray-600" />

            <ul>
              {
                categories.map((category: string, i: number) => (
                  <li class="inline-block">
                    <a
                      href={`/categories/${slugify(category)}`}
                      class="mr-2 hover:text-primary font-medium"
                    >
                      {humanize(category)}
                      {i !== post.data.categories.length - 1 && ","}
                    </a>
                  </li>
                ))
              }
            </ul>
          </li>
        </ul>
      </div>

      <div class="col-10 mt-8 mb-2">
        {
          image && (
            <Image
              src={image}
              height={500}
              width={1000}
              alt={title}
              class="rounded-lg"
            />
          )
        }
      </div>

      <div class="md:col-10">
        <div class="content mb-16 text-left" id="post-content">
          <Content />
        </div>
        <div class="flex flex-wrap items-center justify-between">
          <ul class="mr-4 mb-4 space-x-3">
            {
              tags.map((tag: string) => (
                <li class="inline-block">
                  <a
                    href={`/tags/${slugify(tag)}`}
                    class="block rounded-lg bg-light px-4 py-2 font-semibold text-dark text-sm hover:text-primary transition duration-300"
                  >
                    #{humanize(tag)}
                  </a>
                </li>
              ))
            }
          </ul>

          <!-- {/* Í≥µÏú† Í∏∞Îä• */}
          <Share
            className="social-share mb-4"
            title={title}
            description={description}
            slug={post.id}
          /> -->
        </div>
      </div>
    </article>

    <!-- TOC Ïª¥Ìè¨ÎÑåÌä∏ Ï∂îÍ∞Ä -->
    {
      enable_toc && headings.length > 0 && (
        <TableOfContents client:load headings={headings} />
      )
    }
  </div>
</section>

<!-- üÜï Ìó§Îî©Ïóê ÏûêÎèôÏúºÎ°ú ID Ï∂îÍ∞ÄÌïòÎäî Ïä§ÌÅ¨Î¶ΩÌä∏ -->
<!-- {enable_toc && (
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const content = document.getElementById('post-content');
      if (!content) return;

      const headings = content.querySelectorAll('h1, h2, h3, h4, h5, h6');

      headings.forEach((heading, index) => {
        if (!heading.id) {
          const id = `heading-${index}`;
          heading.id = id;
          console.log(`Set heading ${index}: "${heading.textContent}" -> ID: ${id}`);
        } else {
          console.log(`Heading ${index} already has ID: ${heading.id}`);
        }
      });
      
      console.log('All headings processed:', headings.length);
    });
  </script>
)} -->

<!-- similar posts -->
{
  similarPosts.length > 0 && (
    <section class="section pt-0">
      <div class="container">
        <h2 class="mb-8 text-center h3">Similar Posts</h2>
        <SimilarPosts posts={similarPosts.slice(0, 3)} />
      </div>
    </section>
  )
}
